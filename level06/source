#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/ptrace.h>

void	clear_stdin() {
	char	c = 0;

	while (1) {
		c = getchar();
		if (c == '\n' || c == -1) {
			return;
		}
	}
}

int		get_unum() {
	unsigned int	x = 0;

	fflush(stdout);
	scanf("%u", &x);
	clear_stdin();
	return (x);
}

void	prog_timeout() {
	exit(1);
}

void	enable_timeout_cons() {
	signal(14, prog_timeout);
	alarm(60);
}

int		auth(char *login, int serial) {
	int		len;

	login[strcspn(login, "\n")] = '\0';
	len = strnlen(login, 32);
	if (len <= 5) {
		return (1);
	}

	if (ptrace(0, 0, (void*)1, NULL) == -1) {
		puts("\033[32m.---------------------------.");
		puts("\033[31m| !! TAMPERING DETECTED !!  |");
		puts("\033[32m'---------------------------'");
		return (1);
	}

	int		code = ((int)login[3] ^ 4919) + 6221293;
	int		count = 0;

	while (len >= count) {
		if (login[count] >= 31) {
			return (1);
		}

		int		x = login[count] ^ code;
		int		y = (int)((int64_t)0x88233b2b * x / 0x100000000);
		int		z = x * ((x - y) / 2 + y) / 1024 * -1337 + code;
		code = z;
		count++;
	}

	return (code != serial);
}

int		main(int argc, char **argv) {
	char			buf[32];
	unsigned int	serial;

	puts("***********************************");
	puts("*\t\tlevel06\t\t  *");
	puts("***********************************");
	printf("-> Enter Login: ");
	fgets(buf, 32, stdin);
	puts("***********************************");
	puts("***** NEW ACCOUNT DETECTED ********");
	puts("***********************************");
	printf("-> Enter Serial: ");
	scanf("%u", &serial);
	if (auth(buf, serial) == 0) {
		puts("Authenticated!");
		system("/bin/sh");
		return (0);
	}

	return (1);
}
